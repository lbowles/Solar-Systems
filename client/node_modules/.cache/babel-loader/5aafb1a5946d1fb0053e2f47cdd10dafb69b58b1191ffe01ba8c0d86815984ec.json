{"ast":null,"code":"var _jsxFileName = \"/Users/lbowles/Desktop/Projects/solar-nft/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const svgWidth = 500; // width of the SVG element\n  const svgHeight = 500; // height of the SVG element\n\n  // generate a random number between min and max\n  function getRandomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  // generate a random color in hex format\n  function getRandomColor() {\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n  }\n  function generatePlanet() {\n    // generate a random size for the sun\n    const sunSize = getRandomNumber(50, 100);\n\n    // create the SVG element\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('width', svgWidth);\n    svg.setAttribute('height', svgHeight);\n\n    // create the sun\n    const sun = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    sun.setAttribute('cx', svgWidth / 2); // center the sun horizontally\n    sun.setAttribute('cy', svgHeight / 2); // center the sun vertically\n    sun.setAttribute('r', sunSize); // set the size of the sun\n    sun.setAttribute('fill', 'yellow'); // set the color of the sun\n\n    // add the sun to the SVG element\n    svg.appendChild(sun);\n\n    // generate a random number of planets\n    const numPlanets = Math.floor(Math.random() * 10) + 1;\n\n    // create the planets and their orbits\n    for (let i = 0; i < numPlanets; i++) {\n      // generate a random size and color for the planet\n      const planetSize = getRandomNumber(5, 20);\n      const planetColor = getRandomColor();\n\n      // generate a random orbit radius\n      const orbitRadius = getRandomNumber(sunSize + planetSize, svgWidth / 2);\n\n      // create the orbit path\n      const orbit = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n      orbit.setAttribute('d', `M ${svgWidth / 2} ${svgHeight / 2} m ${-orbitRadius}, 0 a ${orbitRadius},${orbitRadius} 0 1,0 ${orbitRadius * 2},0 a ${orbitRadius},${orbitRadius} 0 1,0 ${-orbitRadius * 2},0`);\n      orbit.setAttribute('stroke', 'lightgray');\n      orbit.setAttribute('stroke-width', '1');\n      orbit.setAttribute('fill', 'none');\n\n      // add the orbit to the SVG element\n      svg.appendChild(orbit);\n\n      // create the planet\n      const planet = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n      planet.setAttribute('cx', svgWidth / 2 + orbitRadius); // start the planet at the top of its orbit\n      planet.setAttribute('cy', svgHeight / 2);\n      planet.setAttribute('r', planetSize);\n      planet.setAttribute('fill', planetColor);\n\n      // create the animation for the planet's orbit\n      const animation = document.createElementNS('http://www.w3.org/2000/svg', 'animateTransform');\n      animation.setAttribute('attributeName', 'transform');\n      animation.setAttribute('type', 'rotate');\n      animation.setAttribute('from', '0 250 250');\n      animation.setAttribute('to', '360  250 250');\n      animation.setAttribute('dur', `${getRandomNumber(0.3, 10)}s`);\n      animation.setAttribute('repeatCount', 'indefinite');\n      console.log('e');\n      // add the animation to the planet\n      planet.appendChild(animation);\n\n      // add the planet to the SVG element\n      svg.appendChild(planet);\n    }\n    document.body.appendChild(svg);\n  }\n  generatePlanet();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","App","svgWidth","svgHeight","getRandomNumber","min","max","Math","random","getRandomColor","floor","toString","generatePlanet","sunSize","svg","document","createElementNS","setAttribute","sun","appendChild","numPlanets","i","planetSize","planetColor","orbitRadius","orbit","planet","animation","console","log","body"],"sources":["/Users/lbowles/Desktop/Projects/solar-nft/src/App.js"],"sourcesContent":["import logo from './logo.svg'\nimport './App.css'\n\nfunction App() {\n  const svgWidth = 500 // width of the SVG element\n  const svgHeight = 500 // height of the SVG element\n\n  // generate a random number between min and max\n  function getRandomNumber(min, max) {\n    return Math.random() * (max - min) + min\n  }\n\n  // generate a random color in hex format\n  function getRandomColor() {\n    return '#' + Math.floor(Math.random() * 16777215).toString(16)\n  }\n\n  function generatePlanet() {\n    // generate a random size for the sun\n    const sunSize = getRandomNumber(50, 100)\n\n    // create the SVG element\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n    svg.setAttribute('width', svgWidth)\n    svg.setAttribute('height', svgHeight)\n\n    // create the sun\n    const sun = document.createElementNS('http://www.w3.org/2000/svg', 'circle')\n    sun.setAttribute('cx', svgWidth / 2) // center the sun horizontally\n    sun.setAttribute('cy', svgHeight / 2) // center the sun vertically\n    sun.setAttribute('r', sunSize) // set the size of the sun\n    sun.setAttribute('fill', 'yellow') // set the color of the sun\n\n    // add the sun to the SVG element\n    svg.appendChild(sun)\n\n    // generate a random number of planets\n    const numPlanets = Math.floor(Math.random() * 10) + 1\n\n    // create the planets and their orbits\n    for (let i = 0; i < numPlanets; i++) {\n      // generate a random size and color for the planet\n      const planetSize = getRandomNumber(5, 20)\n      const planetColor = getRandomColor()\n\n      // generate a random orbit radius\n      const orbitRadius = getRandomNumber(sunSize + planetSize, svgWidth / 2)\n\n      // create the orbit path\n      const orbit = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'path',\n      )\n      orbit.setAttribute(\n        'd',\n        `M ${svgWidth / 2} ${\n          svgHeight / 2\n        } m ${-orbitRadius}, 0 a ${orbitRadius},${orbitRadius} 0 1,0 ${\n          orbitRadius * 2\n        },0 a ${orbitRadius},${orbitRadius} 0 1,0 ${-orbitRadius * 2},0`,\n      )\n      orbit.setAttribute('stroke', 'lightgray')\n      orbit.setAttribute('stroke-width', '1')\n      orbit.setAttribute('fill', 'none')\n\n      // add the orbit to the SVG element\n      svg.appendChild(orbit)\n\n      // create the planet\n      const planet = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'circle',\n      )\n      planet.setAttribute('cx', svgWidth / 2 + orbitRadius) // start the planet at the top of its orbit\n      planet.setAttribute('cy', svgHeight / 2)\n      planet.setAttribute('r', planetSize)\n      planet.setAttribute('fill', planetColor)\n\n      // create the animation for the planet's orbit\n      const animation = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'animateTransform',\n      )\n      animation.setAttribute('attributeName', 'transform')\n      animation.setAttribute('type', 'rotate')\n      animation.setAttribute('from', '0 250 250')\n      animation.setAttribute('to', '360  250 250')\n      animation.setAttribute('dur', `${getRandomNumber(0.3, 10)}s`)\n      animation.setAttribute('repeatCount', 'indefinite')\n      console.log('e')\n      // add the animation to the planet\n      planet.appendChild(animation)\n\n      // add the planet to the SVG element\n      svg.appendChild(planet)\n    }\n    document.body.appendChild(svg)\n  }\n\n  generatePlanet()\n\n  return <div className=\"App\"></div>\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}